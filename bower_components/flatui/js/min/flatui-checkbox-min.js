!function($){var e=function(e,t){this.init(e,t)};e.prototype={constructor:e,init:function(e,t){var c=this.$element=$(e);this.options=$.extend({},$.fn.checkbox.defaults,t),c.before(this.options.template),this.setState()},setState:function(){var e=this.$element,t=e.closest(".checkbox");e.prop("disabled")&&t.addClass("disabled"),e.prop("checked")&&t.addClass("checked")},toggle:function(){var e="checked",t=this.$element,c=t.closest(".checkbox"),o=t.prop(e),n=$.Event("toggle");0==t.prop("disabled")&&(c.toggleClass(e)&&o?t.removeAttr(e):t.attr(e,!0),t.trigger(n).trigger("change"))},setCheck:function(e){var t="disabled",c="checked",o=this.$element,n=o.closest(".checkbox"),s="check"==e?!0:!1,a=$.Event(e);n[s?"addClass":"removeClass"](c)&&s?o.attr(c,!0):o.removeAttr(c),o.trigger(a).trigger("change")}};var t=$.fn.checkbox;$.fn.checkbox=function(t){return this.each(function(){var c=$(this),o=c.data("checkbox"),n=$.extend({},$.fn.checkbox.defaults,c.data(),"object"==typeof t&&t);o||c.data("checkbox",o=new e(this,n)),"toggle"==t&&o.toggle(),"check"==t||"uncheck"==t?o.setCheck(t):t&&o.setState()})},$.fn.checkbox.defaults={template:'<span class="icons"><span class="first-icon fui-checkbox-unchecked"></span><span class="second-icon fui-checkbox-checked"></span></span>'},$.fn.checkbox.noConflict=function(){return $.fn.checkbox=t,this},$(document).on("click.checkbox.data-api","[data-toggle^=checkbox], .checkbox",function(e){var t=$(e.target);e&&e.preventDefault()&&e.stopPropagation(),t.hasClass("checkbox")||(t=t.closest(".checkbox")),t.find(":checkbox").checkbox("toggle")}),$(window).on("load",function(){$('[data-toggle="checkbox"]').each(function(){var e=$(this);e.checkbox()})})}(window.jQuery);